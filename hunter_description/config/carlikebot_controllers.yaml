controller_manager:
  ros__parameters:
    update_rate: 50  # Hz
    use_sim_time: true

    joint_state_broadcaster:
      type: joint_state_broadcaster/JointStateBroadcaster

    bicycle_steering_controller:
      type: bicycle_steering_controller/BicycleSteeringController


bicycle_steering_controller:
  ros__parameters:
    wheelbase: 0.65
    front_wheel_radius: 0.165
    rear_wheel_radius: 0.165
    front_steering: true
    reference_timeout: 2.0
    rear_wheels_names: ['rear_right_wheel_joint', 'rear_left_wheel_joint']
    front_wheels_names: ['front_right_wheel_joint', front_left_wheel_joint]
    open_loop: false
    velocity_rolling_window_size: 10
    base_frame_id: base_link
    odom_frame_id: odom
    enable_odom_tf: true
    twist_covariance_diagonal: [0.0, 7.0, 14.0, 21.0, 28.0, 35.0]
    pose_covariance_diagonal: [0.0, 7.0, 14.0, 21.0, 28.0, 35.0]
    position_feedback: true
    use_stamped_vel: true

  #   </hardware>
  #   <joint name="front_left_wheel_joint">
  #     <command_interface name="position"/>
  #     <state_interface name="position"/>
  #   </joint>
  #   <joint name="rear_left_wheel_joint">
  #     <command_interface name="velocity"/>
  #     <state_interface name="velocity"/>
  #     <state_interface name="position"/>
  #   </joint>
  # </ros2_control>


# controller_manager:
#   ros__parameters:
#     update_rate: 50 # Hz
#     use_sim_time: true

#     tricycle_controller:
#       type: tricycle_controller/TricycleController

#     joint_state_broadcaster:
#       type: joint_state_broadcaster/JointStateBroadcaster

joint_state_broadcaster:
  ros__parameters:
    extra_joints: ["front_left_wheel_cont_joint",  "front_right_wheel_cont_joint"]
    # extra_joints: ["rear_right_wheel_joint", "front_left_wheel_cont_joint", "front_right_wheel_joint", "front_right_wheel_cont_joint"]

# tricycle_controller:
#   ros__parameters:
#     # Model
#     traction_joint_name: rear_left_wheel_joint # Name of traction joint in URDF
#     steering_joint_name: front_left_wheel_joint # Name of steering joint in URDF
#     wheel_radius: 0.3 # Radius of front wheel
#     wheelbase: 1.7 # Distance between center of back wheels and front wheel

#     # Odometry
#     odom_frame_id: odom
#     base_frame_id: base_link
#     publish_rate: 50.0 # publish rate of odom and tf
#     open_loop: false # if True, uses cmd_vel instead of hardware interface feedback to compute odometry
#     enable_odom_tf: true # If True, publishes odom<-base_link TF
#     odom_only_twist: false # If True, publishes on /odom only linear.x and angular.z; Useful for computing odometry in another node, e.g robot_localization's ekf
#     pose_covariance_diagonal: [0.0, 0.0, 0.0, 0.0, 0.0, 0.0] # Need to be set if fusing odom with other localization source
#     twist_covariance_diagonal: [0.0, 0.0, 0.0, 0.0, 0.0, 0.0] # Need to be set if fusing odom with other localization source
#     velocity_rolling_window_size: 10 # Rolling window size of rcppmath::RollingMeanAccumulator applied on linear and angular speeds published on odom

#     # Rate Limiting
#     traction: # All values should be positive
#       # min_velocity: 0.0
#       # max_velocity: 1000.0
#       # min_acceleration: 0.0
#       max_acceleration: 5.0
#       # min_deceleration: 0.0
#       max_deceleration: 8.0
#       # min_jerk: 0.0
#       # max_jerk: 1000.0
#     steering:
#       min_position: -0.48
#       max_position: 0.48
#       # min_velocity: 0.0
#       max_velocity: 1.0
#       # min_acceleration: 0.0
#       # max_acceleration: 1000.0

#     # cmd_vel input
#     cmd_vel_timeout: 500 # In milliseconds. Timeout to stop if no cmd_vel is received
#     use_stamped_vel: false # Set to True if using TwistStamped.

#     # Debug
#     publish_ackermann_command: true # Publishes AckermannDrive. The speed does not comply to the msg definition, it the wheel angular speed in rad/s.
